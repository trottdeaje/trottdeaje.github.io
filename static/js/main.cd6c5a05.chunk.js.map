{"version":3,"sources":["components/Header/resources/logo.svg","components/MainContent/resources/https___trottdeaje.github.io_static_media_oxapt-thumb.46549991.webp","components/MainContent/resources/symqcourse.png","components/MainContent/resources/https___trottdeaje.github.io_static_media_ambersmith-thumb.431f0af8.webp","components/Header/Header.js","components/MainContent/MainContent.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","href","src","logo","alt","MainContent","target","rel","project","project2","project3","Footer","style","fontWeight","id","name","size","type","color","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2FAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,6F,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,kG,yRCsB5BC,MAlBf,WACI,OACJ,4BAAQC,UAAU,oBACd,yBAAKA,UAAU,gBACX,uBAAGC,KAAK,IAAID,UAAW,YACnB,yBAAKE,IAAKC,IAAMC,IAAI,UAE5B,yBAAKJ,UAAU,iBACX,4BACG,4BAAI,4BAAQA,UAAU,+BAA+BC,KAAK,KAAtD,SADP,a,+DCOOI,MAbf,WACI,OACJ,yBAAKL,UAAU,yBACf,uCACA,yBAAKA,UAAU,YACf,yBAAKA,UAAU,YAAW,uBAAGC,KAAM,sCAAuCK,OAAQ,SAAUC,IAAK,uBAAuB,yBAAKL,IAAKM,IAASJ,IAAK,cAChJ,yBAAKJ,UAAU,YAAW,uBAAGC,KAAM,0BAA2BK,OAAQ,SAAUC,IAAK,uBAAuB,yBAAKL,IAAKO,IAAUL,IAAK,cACrI,yBAAKJ,UAAU,YAAW,uBAAGC,KAAM,0BAA2BK,OAAQ,SAAUC,IAAK,uBAAuB,yBAAKL,IAAKQ,IAAUN,IAAK,iB,OCKtHO,MAff,WACI,OACI,gCACR,wCAAa,uBAAGX,UAAU,gBAA1B,OAAgD,0BAAMY,MAAO,CAACC,WAAY,SAA1B,OAChD,yBAAKC,GAAG,WACJ,uBAAGb,KAAK,kCACZ,8BAAUc,KAAK,gBAAgBC,KAAK,KAAKC,KAAK,OAAOC,MAAM,aAEvD,uBAAGjB,KAAK,2CACR,8BAAUc,KAAK,kBAAkBC,KAAK,KAAKC,KAAK,OAAOC,MAAM,gBCMlDC,MAZf,WACE,OACE,6BACA,yBAAKnB,UAAU,OACf,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCDkBoB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,SD2H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.cd6c5a05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.142b7c74.svg\";","module.exports = __webpack_public_path__ + \"static/media/https___trottdeaje.github.io_static_media_oxapt-thumb.46549991.3dbe4005.webp\";","module.exports = __webpack_public_path__ + \"static/media/symqcourse.46891491.png\";","module.exports = __webpack_public_path__ + \"static/media/https___trottdeaje.github.io_static_media_ambersmith-thumb.431f0af8.9a0bcdad.webp\";","import React from 'react'\r\nimport './resources/Header.css'\r\nimport logo from './resources/logo.svg'\r\n\r\nfunction Header(){\r\n    return(\r\n<header className=\"header-container\">\r\n    <div className=\"inner-header\">\r\n        <a href=\"/\" className={\"nav-logo\"}>\r\n            <img src={logo} alt=\"Logo\"/>\r\n            </a>\r\n    <nav className=\"navbar-custom\">\r\n        <ul>\r\n           <li><button className=\"nav-item selected selectable\" href=\"/\">Home</button></li> &nbsp;\r\n           {/* <li><button type=\"button\" className=\"nav-item disabled\" href=\"#\" disabled>About</button></li> &nbsp;\r\n           <li><button type=\"button\" className=\"nav-item disabled\" href=\"#\" disabled>Blog</button></li> */}\r\n        </ul>\r\n    </nav>\r\n    </div>\r\n</header>\r\n    )\r\n}\r\nexport default Header","import React from 'react'\r\nimport './resources/MainContent.css'\r\nimport project from './resources/https___trottdeaje.github.io_static_media_oxapt-thumb.46549991.webp'\r\nimport project2 from './resources/symqcourse.png'\r\nimport project3 from './resources/https___trottdeaje.github.io_static_media_ambersmith-thumb.431f0af8.webp'\r\n\r\nfunction MainContent() {\r\n    return(\r\n<div className=\"maincontent-container\">\r\n<h1>Welcome</h1>\r\n<div className=\"projects\">\r\n<div className=\"project1\"><a href={\"https://trottdeaje.github.io/OxApt/\"} target={\"_blank\"} rel={\"noreferrer noopener\"}><img src={project} alt={\"project\"} /></a></div>\r\n<div className=\"project2\"><a href={\"https://symqcourse.org/\"} target={\"_blank\"} rel={\"noreferrer noopener\"}><img src={project2} alt={\"project\"} /></a></div>\r\n<div className=\"project3\"><a href={\"http://cambersmith.com/\"} target={\"_blank\"} rel={\"noreferrer noopener\"}><img src={project3} alt={\"project\"} /></a></div>\r\n</div>\r\n\r\n</div>\r\n    )\r\n}\r\nexport default MainContent","import React from 'react'\r\nimport './resources/Footer.css'\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer>\r\n<p>Made with <i className=\"em em-heart\"></i> by <span style={{fontWeight: \"bold\"}}>Aj</span></p>\r\n<div id=\"boxicon\">\r\n    <a href=\"https://medium.com/@deajetrott\">\r\n<box-icon name='medium-square' size=\"md\" type='logo' color='#ffffff' ></box-icon>\r\n    </a>\r\n    <a href=\"https://www.linkedin.com/in/deajetrott/\">\r\n    <box-icon name='linkedin-square' size=\"md\" type='logo' color='#ffffff' ></box-icon>\r\n    </a>\r\n</div>\r\n        </footer>\r\n    )\r\n}\r\nexport default Footer","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header'\nimport MainContent from './components/MainContent/MainContent'\nimport Footer from './components/Footer/Footer'\n\nfunction App() {\n  return (\n    <div>\n    <div className=\"App\">\n    <Header />\n    <MainContent />\n    </div>\n  <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}